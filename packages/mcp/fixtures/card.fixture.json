{
	"card": {
		"id": "card",
		"path": "src/components/Card.tsx",
		"name": "Card",
		"description": "A flexible container component for grouping related content with optional header, footer, and action areas.\n\nThe Card component provides a consistent way to present information in a contained, elevated surface. It's commonly used for displaying articles, products, user profiles, or any grouped content that benefits from visual separation.\n\n## Design Principles\n\n- Cards should contain a single subject or action\n- Maintain consistent padding and spacing\n- Use elevation to indicate interactive vs static cards\n- Keep content hierarchy clear with proper use of typography",
		"summary": "A flexible container component for grouping related content",
		"import": "import { Card } from '@storybook/design-system';",
		"reactDocgen": {
			"props": {
				"variant": {
					"description": "The visual style variant of the card",
					"required": false,
					"tsType": {
						"name": "union",
						"raw": "\"elevated\" | \"outlined\" | \"flat\"",
						"elements": [
							{ "name": "literal", "value": "\"elevated\"" },
							{ "name": "literal", "value": "\"outlined\"" },
							{ "name": "literal", "value": "\"flat\"" }
						]
					},
					"defaultValue": { "value": "\"elevated\"", "computed": false }
				},
				"padding": {
					"description": "The amount of internal padding",
					"required": false,
					"tsType": {
						"name": "union",
						"raw": "\"none\" | \"small\" | \"medium\" | \"large\"",
						"elements": [
							{ "name": "literal", "value": "\"none\"" },
							{ "name": "literal", "value": "\"small\"" },
							{ "name": "literal", "value": "\"medium\"" },
							{ "name": "literal", "value": "\"large\"" }
						]
					},
					"defaultValue": { "value": "\"medium\"", "computed": false }
				},
				"clickable": {
					"description": "Whether the entire card is clickable/interactive",
					"required": false,
					"tsType": { "name": "boolean" },
					"defaultValue": { "value": "false", "computed": false }
				},
				"header": {
					"description": "Content to display in the card header",
					"required": false,
					"tsType": { "name": "ReactNode" }
				},
				"footer": {
					"description": "Content to display in the card footer",
					"required": false,
					"tsType": { "name": "ReactNode" }
				},
				"children": {
					"description": "The main content of the card",
					"required": true,
					"tsType": { "name": "ReactNode" }
				},
				"onClick": {
					"description": "Callback function when the card is clicked (requires clickable=true)",
					"required": false,
					"tsType": {
						"name": "signature",
						"type": "function",
						"signature": {
							"arguments": [
								{ "name": "event", "type": { "name": "MouseEvent" } }
							],
							"return": { "name": "void" }
						}
					}
				}
			}
		},
		"stories": [
			{
				"id": "card--basic",
				"name": "Basic",
				"description": "A basic card with just content.\n\nThe default elevated variant provides subtle depth through shadow, making the card appear to float above the page. This is ideal for creating visual hierarchy and grouping related information.",
				"summary": "Basic card with content only",
				"import": "import { Card } from '@storybook/design-system';",
				"jsDocTag": [
					{
						"key": "example",
						"value": "Basic Card"
					}
				],
				"snippet": "const Basic = () => (\n  <Card>\n    <h3>Card Title</h3>\n    <p>This is some card content that provides information to the user.</p>\n  </Card>\n)"
			},
			{
				"id": "card--with-header-and-footer",
				"name": "WithHeaderAndFooter",
				"description": "A card with distinct header and footer sections.\n\nHeaders typically contain titles, subtitles, or avatars. Footers often contain actions like buttons or metadata like timestamps. The header and footer are visually separated from the main content area.",
				"summary": "Card with header and footer sections",
				"import": "import { Card } from '@storybook/design-system';",
				"jsDocTag": [
					{
						"key": "example",
						"value": "Card with Header and Footer"
					}
				],
				"snippet": "const WithHeaderAndFooter = () => (\n  <Card\n    header={<h3>Article Title</h3>}\n    footer={<Button variant=\"tertiary\">Read More</Button>}\n  >\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n  </Card>\n)"
			},
			{
				"id": "card--clickable",
				"name": "Clickable",
				"description": "An interactive card that responds to clicks.\n\nClickable cards add hover effects and cursor changes to indicate interactivity. This pattern is useful for navigation cards, product cards, or any scenario where the entire card acts as a single interactive element.\n\n## Accessibility\n\nClickable cards are rendered as buttons with proper keyboard support and ARIA attributes.",
				"summary": "Interactive clickable card",
				"import": "import { Card } from '@storybook/design-system';",
				"jsDocTag": [
					{
						"key": "example",
						"value": "Clickable Card"
					}
				],
				"snippet": "const Clickable = () => (\n  <Card clickable onClick={() => alert('Card clicked!')}>\n    <h3>Product Name</h3>\n    <p>Click anywhere on this card to view details.</p>\n  </Card>\n)"
			},
			{
				"id": "card--variants",
				"name": "Variants",
				"description": "Different visual variants of the card component.\n\n- **Elevated**: Default variant with shadow for depth\n- **Outlined**: Border-only variant without shadow\n- **Flat**: No border or shadow, minimal visual separation\n\nChoose variants based on your design system and the level of emphasis needed.",
				"summary": "Card visual variants (elevated, outlined, flat)",
				"import": "import { Card } from '@storybook/design-system';",
				"jsDocTag": [
					{
						"key": "example",
						"value": "Card Variants"
					}
				],
				"snippet": "const Variants = () => (\n  <>\n    <Card variant=\"elevated\">\n      <p>Elevated card with shadow</p>\n    </Card>\n    <Card variant=\"outlined\">\n      <p>Outlined card with border</p>\n    </Card>\n    <Card variant=\"flat\">\n      <p>Flat card without border or shadow</p>\n    </Card>\n  </>\n)"
			},
			{
				"id": "card--user-profile",
				"name": "UserProfile",
				"description": "A real-world example of a user profile card.\n\nThis example demonstrates how to compose the Card component with other design system components to create a complete, functional UI element. It includes an avatar, user information, stats, and action buttons.",
				"summary": "Complete user profile card example",
				"import": "import { Card, Avatar, Button } from '@storybook/design-system';",
				"jsDocTag": [
					{
						"key": "example",
						"value": "User Profile Card"
					},
					{
						"key": "composition",
						"value": "Uses Avatar and Button components"
					}
				],
				"snippet": "const UserProfile = () => (\n  <Card\n    header={\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n        <Avatar src=\"/user.jpg\" alt=\"Jane Doe\" />\n        <div>\n          <h3>Jane Doe</h3>\n          <p>Senior Developer</p>\n        </div>\n      </div>\n    }\n    footer={\n      <div style={{ display: 'flex', gap: '0.5rem' }}>\n        <Button variant=\"primary\" size=\"small\">Follow</Button>\n        <Button variant=\"secondary\" size=\"small\">Message</Button>\n      </div>\n    }\n  >\n    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n      <div><strong>1.2K</strong><br/>Followers</div>\n      <div><strong>342</strong><br/>Following</div>\n      <div><strong>89</strong><br/>Posts</div>\n    </div>\n  </Card>\n)"
			}
		],
		"jsDocTag": [
			{
				"key": "summary",
				"value": "A flexible container component for grouping related content"
			},
			{
				"key": "since",
				"value": "1.0.0"
			},
			{
				"key": "component",
				"value": "Card"
			},
			{
				"key": "pattern",
				"value": "Container"
			}
		]
	}
}
